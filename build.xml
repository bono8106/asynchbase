<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.    
-->
<project name="esmart" default="package" xmlns:ivy="antlib:org.apache.ivy.ant">
    <!-- some variables used -->
    <property name="src.dir" value="src" />
    <property name="build.dir" value="build" />
    <property name="build.classes.dir" value="${build.dir}" />
    <property name="build.ivy.dir" value="${build.dir}/ivy" />

    <target name="resolve">
        <ivy:settings id="ivy.settings" file="ivysettings.xml"/>
        <ivy:resolve settingsref="ivy.settings" />
        <property name="module.name" value="${ivy.module}" />
        <property name="module.revision" value="${ivy.revision}" />
    </target>

	<target name="classpath" depends="resolve">
		<ivy:resolve log="quiet" settingsref="ivy.settings" />
		<ivy:cachepath pathid="ivy.lib.path.id" conf="default" />
	    <path id="run.path.id">
	        <path location="${build.classes.dir}" />
	        <path refid="ivy.lib.path.id" />
	    </path>
	</target>

    <!-- ================================= 
          target: report              
         ================================= -->
    <target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${build.ivy.dir}" settingsref="ivy.settings"/>
    </target>

    <!-- ================================= 
          target: publish
         ================================= -->
    <target name="publish" depends="resolve" description="--> publish the module to the repository">
        <tstamp>
          <format property="now" pattern="yyyyMMddHHmmss"/>
        </tstamp>
        <property name="pub.revision" value="${ivy.revision}-${now}"/>
        <ivy:publish resolver="vob-repo" settingsref="ivy.settings" update="true" pubrevision="${pub.revision}" 
            artifactspattern="${build.dir}/[module]-${ivy.revision}(-[classifier]).[ext]"/>
    </target>

    <!-- ================================= 
          target: compile
         ================================= -->
    <target name="compile" depends="classpath" description="--> compile the project">
        <mkdir dir="${build.classes.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}" 
            classpathref="ivy.lib.path.id"
            optimize="on"
            debug="on" />
    </target>

    <!-- ================================= 
          target: package
         ================================= -->
    <target name="package" depends="compile" description="--> package the project">
        <jar destfile="${build.dir}/${module.name}-${module.revision}.jar">
            <fileset dir="${build.classes.dir}" includes="**/*.class" />
        </jar>
        <zip destfile="${build.dir}/${module.name}-${module.revision}-sources.jar">
            <fileset dir="${src.dir}" includes="**/*.java" />
        </zip>
        <javadoc destdir="${build.dir}/api" classpathref="ivy.lib.path.id" sourcepath="${src.dir}" 
            link="http://download.oracle.com/javase/6/docs/api"/>
        <zip destfile="${build.dir}/${module.name}-${module.revision}-javadoc.jar">
            <fileset dir="${build.dir}/api" includes="**" />
        </zip>
    </target>

    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" description="--> clean the project">
        <delete includeemptydirs="true">
            <fileset dir="${basedir}">
                <include name="${build.dir}/**" />
        	</fileset>
    	</delete>
    </target>

    <!-- ================================= 
          target: clean-cache              
         ================================= -->
	<target name="clean-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>
</project>
